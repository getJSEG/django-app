"""
Django settings for fourever project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
from rest_framework.settings import api_settings
from django.core.management.utils import get_random_secret_key
from corsheaders.defaults import default_headers
import dj_database_url ##INSTALL THIS Library
import mimetypes
import sys #INSTALL THIS Library
import pyrebase
import os

mimetypes.add_type("text/css", ".css", True)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# EMAIL_USE_TLS = EMAIL_USE_TLS
# EMAIL_HOST = EMAIL_HOST
# EMAIL_HOST_USER = EMAIL_HOST_USER
# EMAIL_HOST_PASSWORD = EMAIL_HOST_PASSWORD
# EMAIL_PORT = EMAIL_PORT


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

#This will be UNCOMENTED for Production
SECRET_KEY = os.getenv("DJANGO_SECRETE_KEY", get_random_secret_key())

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-o5cp0zfxp%ke0u0bwjg=y99xng$)!#qqtlo00l*s4!ee4fu@0g'

DEVELOPMENT_MODE = os.getenv("DEVELOPMENT_MODE", "False") == "True"
# DEVELOPMENT_MODE = True
# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = os.getenv("DEBUG", "False") == "True"
DEBUG = True


#This will be UNCOMENTED for Production
ALLOWED_HOSTS = os.getenv("DJANGO_ALLOWED_HOST", "127.0.0.1,localhost").split(",")
# ALLOWED_HOSTS = ["localhost", "192.168.8.160"]

# Application definition
WHITENOISE_MIMETYPES = {
    '.xsl': 'application/xml'
}

# if not DEBUG:
# REST_FRAMEWORK = {
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.IsAuthenticated',
#         'rest_framework.permissions.AllowAny',
#     ],
#     'DEFAULT_AUTHENTICATION_CLASSES': [
#         'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
#         # 'knox.auth.TokenAuthentication',
#         # 'rest_framework.authentication.SessionAuthentication',
#     ],
#     'DEFAULT_RENDERER_CLASSES':[
#         'rest_framework.renderers.JSONRenderer'
#     ]
# }
# else:
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'dj_rest_auth.jwt_auth.JWTCookieAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        # 'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
        # 'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_RENDERER_CLASSES':[
        'rest_framework.renderers.JSONRenderer'
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    "PAGE_SIZE":12
}

# OIDC_KEY =  Path(str(BASE_DIR)+'oidc.key').read_text()
# OAUTH2_PROVIDER = {
#     # this is the list of available scopes
#     # "OIDC_ENABLE":True,
#     # "OIDC_RSA_PRIVATE_KEY": OIDC_KEY,
#     # 'RESOURCE_SERVER_INTROSPECTION_URL': 'http://127.0.0.1:8000/o/login/',
#     # 'RESOURCE_SERVER_AUTH_TOKEN': 'auth_server_admin_token',
#     'SCOPES': {'read': 'Read scope', 'write': 'Write scope', 'groups': 'Access to your groups'},
# }

REST_AUTH = {
    'USE_JWT': True,
    'JWT_AUTH_COOKIE': 'my-app-auth',
    'JWT_AUTH_HTTPONLY':False,
    'REGISTER_SERIALIZER': 'dj_rest_auth.registration.serializers.RegisterSerializer',
    'LOGOUT_ON_PASSWORD_CHANGE': True,
    'JWT_AUTH_SAMESITE': 'strict',
    'JWT_AUTH_RETURN_EXPIRATION': False
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=10),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    "AUTH_HEADER_TYPES": ("Bearer",),
    # "SIGNING_KEY": SECRET_KEY,
}

REST_USE_JWT= True
FILE_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024 

AUTHENTICATION_BACKENDS = [
    # Uncomment following if you want to access the admin
    'allauth.account.auth_backends.AuthenticationBackend',
    'django.contrib.auth.backends.ModelBackend',
]
ACCOUNT_AUTHENTICATION_METHOD = 'username'
ACCOUNT_USER_MODEL_EMAIL_FIELD = None

LOGIN_URL = '/admin/login/'

INSTALLED_APPS = [
    'api.apps.ApiConfig',
    'sorl.thumbnail',
    'corsheaders',
    'django.contrib.staticfiles',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sites',
    # 'oauth2_provider',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_simplejwt',
    'dj_rest_auth',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'dj_rest_auth.registration',
    'rest_framework_simplejwt.token_blacklist',
]

SITE_ID = 1

AUTH_USER_MODEL = 'api.CustomUser'

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    # 'oauth2_provider.middleware.OAuth2TokenMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
ROOT_URLCONF = 'fourever.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'fourever.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         "NAME": os.path.join(BASE_DIR, "db.sqlite3")
#     }
# }

DATABASES = {
    'default': {
    'ENGINE': 'django.db.backends.postgresql_psycopg2',
    'NAME': 'my_db',
    'USER' : 'elmergonzalez',
    'PASSWORD' : 'my_db@123',
    'HOST' : '127.0.0.1',
    'PORT' : '5432',
    }
}


# if DEVELOPMENT_MODE is True:
#     DATABASES = {
#         "default": {
#             "ENGINE": "django.db.backends.sqlite3",
#             "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
#         }
#     }
# elif len(sys.argv) > 0 and sys.argv[1] != 'collectstatic':
#     if os.getenv("DATABASE_URL", None) is None:
#         raise Exception("DATABASE_URL environment variable not defined")
#     DATABASES = {
#         "default": dj_database_url.parse(os.environ.get("DATABASE_URL")),
# }


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/El_Salvador'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'

# Base URL to server media files 
MEDIA_URL = '/media/'

# path where media is stored
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

MEDIAFILES_DIRS = [
    os.path.join(BASE_DIR, "media")
]

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
    os.path.join(BASE_DIR, "media/static"),
]

#################### django resize ###############################
DJANGORESIZED_DEFAULT_SIZE = [1000, 1500]
DJANGORESIZED_DEFAULT_SCALE = 0.5
DJANGORESIZED_DEFAULT_QUALITY = 75
DJANGORESIZED_DEFAULT_KEEP_META = True
DJANGORESIZED_DEFAULT_FORCE_FORMAT = 'JPEG'
DJANGORESIZED_DEFAULT_FORMAT_EXTENSIONS = {'JPEG': ".jpg"}
DJANGORESIZED_DEFAULT_NORMALIZE_ROTATION = True
#################### django resize ###############################

# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

##CORS
CORS_ALLOW_ALL_ORIGINS = True
# CORs_ORIGIN_WHITELIST = ['http://localhost:3000','http://127.0.0.1:3000', 'https://4-ever.co']
# CORS_ALLOWED_ORIGINS = ['http://localhost:3000','http://127.0.0.1:3000', 'https://4-ever.co']
# CSRF_TRUSTED_ORIGINS = ['http://localhost:3000', 'http://127.0.0.1:3000', 'https://4-ever.co' ]

# SECURE_CROSS_ORIGIN_OPENER_POLICY = None
# #CSRF
CORS_ALLOW_CREDENTIALS = True
# CSRF_USE_SESSIONS = False

# CSRF_COOKIE_SAMESITE = 'None'
# SESSION_COOKIE_SAMESITE = 'None'

# CSRF_COOKIE_SECURE = False
# SESSION_COOKIE_SECURE = False

# CSRF_COOKIE_HTTPONLY = False  # False since we will grab it via universal-cookies
# SESSION_COOKIE_HTTPONLY = False

# CSRF_COOKIE_NAME = "csrftoken"
# CORS_EXPOSE_HEADERS = ["Content-Type", "X-CSRFToken"]

CORS_ALLOW_METHODS = [
'DELETE',
'GET',
'OPTIONS',
'PATCH',
'POST',
'PUT',
]

CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'X-CSRFTOKEN',
]
# CORS_ALLOW_HEADERS = list(default_headers)

# CSRF_COOKIE_DOMAIN = ['http://127.0.0.1:8000']
# PROD ONLY
#if website if not HTTPS this wont work


# DISABLE_COLLECTSTATIC = os.getenv("DEVELOPMENT_MODE", 1) == 1